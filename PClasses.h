#pragma once
#include<string>
#include<vector>
#include<iostream>
#include<fstream>

using namespace std;

class clauses
{
public:
    bool checker;
    vector<int> posliterals;
    vector<int> negliterals;
};

class variable                                                         // ??????????
{
public:
	bool value;
    bool determined;
    vector<clauses*> neglist;
    vector<clauses*> poslist;
};

class Sat_Solver
{
public:
    Sat_Solver();
    ~Sat_Solver();

    bool solver();                                                     //???????? ???????????? ??????.
    ifstream& read_function(ifstream& file);                           //??????? ?????.
    ostream& write_variables(ostream& stream, bool solved);            //??????? ??????.
    clauses* function;                                                 //??????????????? ??????? (???????????? ????? ??????? ??????????)
    unsigned int function_size;                                        //??????????, ???????? ???????????
    unsigned int variables_size;                                 	   //?????????? ? ??????????.
    variable* variables;                                               //??????????

private:
    int Check(clauses* object);
    bool Solution_search();                                            //???????? ???????.
    bool Satsolving(variable* new_variable);                           //???????, ??????????? ????? ???????.
    bool Choose(variable*& new_variable);                              //????? ?????????? (???????? ??????????, ????????????? ???? ?????)
    bool Unit_propagation(variable* new_variable);                     //??????? ?????????? ?????????? ???????? ??????????.
    bool Next(clauses* object, variable*& next_var);                   //??????? ??????? ??????????? ?????????? "non-false"
    void Back_track(vector<clauses*> local_changes);                   //???????, ??????????? ??????? ? ?????????? ????????? ??????????.
    void Brackets_checking(variable* new_variable);                    //???????, ??????????? ??????, ????? ?????? ????? ???????.
    void init_var(variable* new_variable, bool);
    void deinit_var(variable*& new_variable);						   //??????? ???????? ????????? ?????????? ??? Unit propagation
    void Cancellation_of_changes(vector<variable*> local_var_changes); //??????? ???????? ??? ?????????????? ?? ??????? ???.
    void Pure_initialization();                                        //??????? ?????????????? ?????? ??????????.

    //?????????? ????????????? ?????????:
    vector<vector<clauses*>> changes;
    vector<clauses*> local_changes;
    vector<vector<variable*>> var_changes;
    vector<variable*> local_var_changes;
};

